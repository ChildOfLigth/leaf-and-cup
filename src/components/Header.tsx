import { Dispatch, JSX, SetStateAction, useEffect, useState } from "react";
import logo from "../../public/logo.svg";
import { Outlet, Link, useLocation } from "react-router-dom";
import "../style/Header.scss";

interface HeaderProps {
  activeMenuBurger: boolean;
  toggleModal: Dispatch<SetStateAction<boolean>>;
}

export function Header({
  activeMenuBurger,
  toggleModal,
}: HeaderProps): JSX.Element {
  const location = useLocation();
  const [activeClassLink, setActiveClassLink] = useState<boolean>(false);
  const [visibleMenuBurger, setVisibleMenuBurger] = useState<boolean>(false);
  const [openBurgenMenu, setOpenBurgenMenu] = useState<boolean>(false);

  function displayOfBurgerMenu() {
    setVisibleMenuBurger(window.innerWidth <= 742);
  }

  useEffect(() => {
    displayOfBurgerMenu();
    const handleResize = () => displayOfBurgerMenu();
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  useEffect(() => {
    if (location.pathname == "/leaf-and-cup/wish-list") {
      setActiveClassLink(true);
    } else {
      setActiveClassLink(false);
    }
  }, [location.pathname]);

  return (
    <>
      <header>
        <div className="header-content">
          <img src={logo} alt="" className="header-content_logo-block" />
          {visibleMenuBurger != true ? (
            <>
              <div className="header-content_navigation">
                <div className="navigation_link-block">
                  <Link to="/leaf-and-cup">Главная</Link>
                  <Link to="/leaf-and-cup/list-of-allGoods">Весь асортимент</Link>
                  <Link to="/leaf-and-cup#cafe-location">Контакты</Link>
                </div>
                
                <Link
                  to="/leaf-and-cup/wish-list"
                  title="Перейти в список желаемого"
                  className={activeClassLink ? "navigation_navigate-to-wishList active" : "navigation_navigate-to-wishList"}
                >
                  <svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">
                    <g clipPath="url(#clip0_73_4)">
                      <path
                        d="M241.3 81.415C246.007 85.8022 250.526 90.3775 255 95C257.845 93.7141 259.825 92.3978 261.961 90.1289C262.508 89.56 263.055 88.991 263.618 88.4048C264.198 87.7968 264.778 87.1889 265.375 86.5625C293.092 58.2516 329.704 42.6682 369.281 41.9932C390.107 42.0455 411.122 46.0912 430 55C430.67 55.3142 431.34 55.6284 432.029 55.9522C452.02 65.5194 469.531 79.3721 483 97C483.667 97.8508 484.333 98.7016 485.02 99.5781C508.37 130.343 516.301 169.27 511.317 207.273C510.497 212.262 509.361 217.133 508 222C507.679 223.165 507.679 223.165 507.351 224.354C504.161 235.544 499.557 245.801 494 256C493.435 257.058 492.869 258.117 492.286 259.207C485.721 270.992 477.165 281.154 468 291C466.95 292.153 465.901 293.307 464.852 294.461C457.669 302.316 450.19 309.711 442.348 316.906C439.684 319.352 437.099 321.857 434.563 324.438C431.651 327.393 428.611 330.117 425.465 332.82C422.081 335.813 418.795 338.908 415.5 342C411.021 346.2 406.532 350.367 401.875 354.371C399.613 356.337 397.404 358.357 395.188 360.375C391.747 363.485 388.237 366.465 384.625 369.375C380.612 372.62 376.776 375.987 373 379.5C368.467 383.714 363.788 387.682 358.969 391.566C355.487 394.421 352.084 397.357 348.688 400.312C348.054 400.864 347.421 401.415 346.768 401.983C345.482 403.102 344.196 404.221 342.91 405.34C334.959 412.25 326.956 419.082 318.778 425.723C315.657 428.282 312.576 430.886 309.5 433.5C304.738 437.545 299.937 441.537 295.086 445.477C292.663 447.458 290.254 449.454 287.852 451.461C287.114 452.075 286.375 452.69 285.615 453.323C284.166 454.529 282.72 455.739 281.277 456.952C272.582 464.175 264.854 470.457 253.125 470C244.231 468.815 237.722 463.032 231.34 457.133C227.057 453.229 222.504 449.645 218 446C211.309 440.58 204.716 435.063 198.193 429.442C194.668 426.411 191.11 423.43 187.5 420.5C182.657 416.569 177.924 412.521 173.201 408.448C169.595 405.346 165.948 402.305 162.25 399.312C157.873 395.76 153.689 392.04 149.524 388.242C146.95 385.955 144.308 383.785 141.625 381.625C136.483 377.464 131.626 373.056 126.778 368.562C123.894 365.901 120.957 363.313 117.993 360.742C114.772 357.925 111.606 355.047 108.43 352.18C106.344 350.309 104.242 348.461 102.125 346.625C97.2093 342.339 92.4202 337.916 87.6255 333.496C85.9724 331.974 84.3149 330.457 82.6567 328.941C76.9914 323.751 71.4461 318.493 66.0513 313.02C63.4377 310.446 60.6808 308.069 57.9028 305.676C52.8184 301.197 48.2696 296.271 43.8638 291.133C42.5988 289.685 41.3029 288.263 39.981 286.867C29.1092 275.31 20.4151 262.301 13.8545 247.876C13.0426 246.093 12.2001 244.323 11.356 242.555C2.91108 224.126 -0.417965 204.469 -0.312008 184.313C-0.30952 183.558 -0.307033 182.803 -0.30447 182.026C-0.24875 171.109 -0.0505173 160.56 3.00049 150C3.23156 149.189 3.46262 148.377 3.70069 147.541C9.93683 126.252 19.5252 107.88 34.0005 91C34.6837 90.1931 35.3669 89.3861 36.0708 88.5547C40.3784 83.5714 44.8554 79.1128 50.0005 75C51.024 74.1776 52.0475 73.3552 53.1021 72.5078C68.3075 60.656 85.4142 52.0777 104 47C105.141 46.6855 106.282 46.3709 107.458 46.0469C155.691 34.3746 204.949 48.3805 241.3 81.415ZM80.0005 111C79.1987 111.656 78.3969 112.312 77.5708 112.988C62.446 125.875 52.7825 142.797 48.0005 162C47.7762 162.829 47.5519 163.658 47.3208 164.512C41.5615 189.64 48.5848 216.085 61.0005 238C65.2822 244.663 70.2533 250.615 75.6294 256.418C77.5553 258.515 79.4225 260.641 81.2817 262.797C85.0004 267.059 88.9279 271.076 92.938 275.063C93.6025 275.731 94.267 276.399 94.9517 277.088C98.8993 281.028 102.951 284.783 107.192 288.406C109.041 290.036 110.775 291.741 112.5 293.5C115.404 296.449 118.443 299.161 121.579 301.859C124.096 304.085 126.547 306.37 128.996 308.669C134.556 313.889 140.199 318.859 146.157 323.625C149.557 326.465 152.776 329.464 156 332.5C160.958 337.167 166.039 341.566 171.356 345.824C174.159 348.13 176.831 350.542 179.5 353C183.868 357.016 188.369 360.794 192.985 364.52C196.547 367.45 200.025 370.468 203.5 373.5C208.656 377.995 213.876 382.386 219.192 386.691C222.503 389.413 225.754 392.201 229 395C234.134 399.424 239.318 403.767 244.598 408.016C246.774 409.813 248.818 411.695 250.875 413.625C253.645 416.22 253.645 416.22 256.25 416.023C260.288 414.521 262.974 411.881 266.125 409C267.468 407.803 268.812 406.608 270.157 405.414C270.813 404.828 271.469 404.242 272.145 403.638C274.586 401.483 277.094 399.422 279.625 397.375C285.268 392.801 290.808 388.111 296.343 383.407C299.059 381.101 301.78 378.801 304.5 376.5C305.585 375.582 306.67 374.664 307.754 373.746C309.907 371.925 312.061 370.104 314.215 368.285C322.176 361.561 330.103 354.798 338 348C338.941 347.191 338.941 347.191 339.901 346.365C346.252 340.899 352.58 335.42 358.75 329.75C362.322 326.471 365.975 323.355 369.75 320.312C373.519 317.271 376.99 314.129 380.356 310.652C382.009 308.992 383.723 307.464 385.5 305.938C391.498 300.76 397.226 295.287 403.004 289.867C404.946 288.051 406.896 286.243 408.848 284.438C437.089 258.298 464.363 229.792 466.278 189.121C467.047 161.94 458.492 138.205 440 118C422.726 100.277 398.929 89.1239 374.092 88.7075C362.159 88.6373 351.341 89.1678 340 93C339.345 93.2196 338.69 93.4393 338.015 93.6655C321.003 99.55 307.721 110.015 295.243 122.738C294.563 123.431 293.884 124.124 293.183 124.838C290.362 127.723 287.548 130.615 284.747 133.521C282.674 135.667 280.584 137.797 278.493 139.926C277.564 140.902 277.564 140.902 276.617 141.899C271.583 146.99 266.176 150.244 259.067 151.531C258.241 151.521 257.414 151.511 256.563 151.5C255.739 151.51 254.916 151.521 254.067 151.531C244.993 149.959 239.062 145.909 232.86 139.305C232.13 138.557 231.401 137.81 230.649 137.04C228.335 134.665 226.041 132.272 223.75 129.875C203.398 108.659 180.336 89.4221 149.325 88.7617C123.288 88.3273 100.359 93.7984 80.0005 111Z"
                      />
                    </g>
                    <defs>
                      <clipPath id="clip0_73_4">
                        <rect width="512" height="512" fill="white" />
                      </clipPath>
                    </defs>
                  </svg>
                </Link>
              </div>
            </>
          ) : (
            <>
              <button
                className={openBurgenMenu ? "header-content_open-menu-burger open" : "header-content_open-menu-burger"}
                onClick={() => {toggleModal(!activeMenuBurger); setOpenBurgenMenu(!openBurgenMenu)}}
              >
                <span></span>
                <span></span>
                <span></span>
              </button>
            </>
          )}
        </div>
      </header>
      <Outlet />
    </>
  );
}
